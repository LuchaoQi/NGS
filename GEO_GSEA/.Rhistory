install_github("stnava/ITKR")
devtools::install_github("stnava/ITKR")
install.packages(devtools)
install.packages('devtools')
devtools::install_github("stnava/ITKR")
devtools::install_github("stnava/ANTsR")
library(devtools)
?devtools
??devtools
?devtools
library(devtools)
install.packages('devtools')
library(devtools)
devtools::install_github("stnava/ITKR")
?devtools
??devtools
install.packages(devtools)
devtools::install_github("stnava/ITKR")
library(devtools)
library(devtools)
install.packages('devtools')
library(devtools)
install_github('stnava/ITKR')
install_github('stnava/ANTsR')
library(ANTsR)
install_github('stnava/ANTsR')
update.packages()
y
y
y
y
y
y
library(ANTsR)
library(ggplot2)
library(ANTsR)
library(devtools)
install_github('stnava/ANTsR')
install_github('stnava/ANTsR')
install_github('stnava/ANTsR')
devtool::install_github('stnava/ANTsR')
library(devtools)
devtool::install_github('stnava/ANTsR')
devtools::install_github('stnava/ANTsR')
usethis::browse_github_pat()
devtools::install_github('stnava/ANTsR')
devtools::install_github('stnava/ANTsR')
usethis::edit_r_environ()
devtools::install_github('stnava/ANTsR')
usethis::edit_r_environ()
?ants_regwrite
??ants_regwrite
?fsl_robust
library(fslr)
?fsl_robust
??fsl_robustfov
?fslrobustfov.help
fslrobustfov.help()
fslbet_robust
??fslbet_robust
library(extrantsr)
fslbet_robust
?fslbet_robust
install.packages('Tcseq')
install.packages('TCseq')
BiocManager::install("TCseq", version = "3.8")
install.packages(BioManager)
install.packages('BioManager')
install.packages("BiocManager")
source("https://bioconductor.org/biocLite.R")
biocLite("TCseq")
install.packages('caret')
install.packages('caret', dependencies = TRUE)
updateR
updateR()
install.packages('installr')
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
warnings()
install.packages("devtools")
remotes::install_github('adnaniazi/tailfindr', build = TRUE, build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
??updateR()
install.packages('installr')
library(installr)
install.packages('installr')
if(!require(installr)) {
install.packages("installr"); require(installr)}
install.packages('installr')
install.packages("installr")
install.packages(c("backports", "broom", "clipr", "cluster", "httpuv", "nlme", "remotes", "shiny", "usethis", "V8"))
install.packages('installr')
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
remotes::install_github('adnaniazi/tailfindr', build = TRUE, build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
update.packages(checkBuilt=TRUE, ask=FALSE)
sessionInfo()
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
load(file = 'GSE17708_DEG.Rdata')
setwd("~/NGS/GEO")
load(file = 'GSE17708_DEG.Rdata')
view(nrDEG)
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
library(clusterProfiler)
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
rm(gene)
rm(geneList)
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
gene = head(rownames(nrDEG),1000)
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
install.packages("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
install.packages("runjags","metaBMA","ggstatsplot")
install.packages("runjags","metaBMA","ggstatsplot")
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
