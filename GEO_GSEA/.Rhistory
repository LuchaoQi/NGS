install_github("stnava/ITKR")
devtools::install_github("stnava/ITKR")
install.packages(devtools)
install.packages('devtools')
devtools::install_github("stnava/ITKR")
devtools::install_github("stnava/ANTsR")
library(devtools)
?devtools
??devtools
?devtools
library(devtools)
install.packages('devtools')
library(devtools)
devtools::install_github("stnava/ITKR")
?devtools
??devtools
install.packages(devtools)
devtools::install_github("stnava/ITKR")
library(devtools)
library(devtools)
install.packages('devtools')
library(devtools)
install_github('stnava/ITKR')
install_github('stnava/ANTsR')
library(ANTsR)
install_github('stnava/ANTsR')
update.packages()
y
y
y
y
y
y
library(ANTsR)
library(ggplot2)
library(ANTsR)
library(devtools)
install_github('stnava/ANTsR')
install_github('stnava/ANTsR')
install_github('stnava/ANTsR')
devtool::install_github('stnava/ANTsR')
library(devtools)
devtool::install_github('stnava/ANTsR')
devtools::install_github('stnava/ANTsR')
usethis::browse_github_pat()
devtools::install_github('stnava/ANTsR')
devtools::install_github('stnava/ANTsR')
usethis::edit_r_environ()
devtools::install_github('stnava/ANTsR')
usethis::edit_r_environ()
?ants_regwrite
??ants_regwrite
?fsl_robust
library(fslr)
?fsl_robust
??fsl_robustfov
?fslrobustfov.help
fslrobustfov.help()
fslbet_robust
??fslbet_robust
library(extrantsr)
fslbet_robust
?fslbet_robust
install.packages('Tcseq')
install.packages('TCseq')
BiocManager::install("TCseq", version = "3.8")
install.packages(BioManager)
install.packages('BioManager')
install.packages("BiocManager")
source("https://bioconductor.org/biocLite.R")
biocLite("TCseq")
install.packages('caret')
install.packages('caret', dependencies = TRUE)
updateR
updateR()
install.packages('installr')
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
warnings()
install.packages("devtools")
remotes::install_github('adnaniazi/tailfindr', build = TRUE, build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
??updateR()
install.packages('installr')
library(installr)
install.packages('installr')
if(!require(installr)) {
install.packages("installr"); require(installr)}
install.packages('installr')
install.packages("installr")
install.packages(c("backports", "broom", "clipr", "cluster", "httpuv", "nlme", "remotes", "shiny", "usethis", "V8"))
install.packages('installr')
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
remotes::install_github('adnaniazi/tailfindr', build = TRUE, build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
update.packages(checkBuilt=TRUE, ask=FALSE)
sessionInfo()
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
load(file = 'GSE17708_DEG.Rdata')
setwd("~/NGS/GEO")
load(file = 'GSE17708_DEG.Rdata')
view(nrDEG)
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
library(clusterProfiler)
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
rm(gene)
rm(geneList)
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
gene = head(rownames(nrDEG),1000)
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
install.packages("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
install.packages("runjags","metaBMA","ggstatsplot")
install.packages("runjags","metaBMA","ggstatsplot")
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
??bitr
library(clusterProfiler)
gene = head(rownames(nrDEG),1000)
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
BiocManager::install("org.Hs.eg.db")
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
library(org.Hs.eg.db)
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
gene = head(rownames(nrDEG),1000)
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
head(gene.df)
kk <- enrichKEGG(gene         = gene.df$ENTREZID,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk)[,1:6]
?vignette()
vignette("clusterProfiler")
vignette(ggplot2)
vignette("ggplotify")
?clusterProfiler
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
gene_up= DEG[DEG$change == 'UP','ENTREZID']
view(DEG)
rm(list = ls())
library(tidyverse)
load(file = 'GSE17708_DEG.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
gene = rownames(nrDEG)
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
head(gene.df)
head(DEG)
###  GSEA
geneList = nrDEG$logFC
head(geneList)
names(geneList) = rownames(nrDEG)
head(geneList)
names(geneList) = rownames(nrDEG) %>% sort(decreasing = T)
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
###  GSEA
geneList = nrDEG$logFC
names(geneList) = rownames(nrDEG) %>% sort(decreasing = T)
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
geneList = sort(geneList,decreasing = T)
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
geneList
rm(list=ls())
load(file='GSE17708_DEG.Rdata')
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
df <- bitr(rownames(DEG), fromType = "SYMBOL",
toType = c( "ENTREZID"),
OrgDb = org.Hs.eg.db)
head(df)
head(df)
head(DEG)
DEG$SYMBOL = rownames(DEG)
head(DEG)
DEG=merge(DEG,df,by='SYMBOL')
head(DEG)
rm(list=ls())
load(file='GSE17708_DEG.Rdata')
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
df <- bitr(rownames(DEG), fromType = "SYMBOL",
toType = c( "ENTREZID"),
OrgDb = org.Hs.eg.db)
head(df)
head(DEG)
DEG$SYMBOL = rownames(DEG)
DEG=merge(DEG,df,by='SYMBOL')
head(DEG)
gene_up= DEG[DEG$change == 'UP','ENTREZID']
gene_down=DEG[DEG$change == 'DOWN','ENTREZID']
gene_diff=c(gene_up,gene_down)
gene_all=as.character(DEG[ ,'ENTREZID'] )
data(geneList, package="DOSE")
head(geneList)
boxplot(geneList)
boxplot(DEG$logFC)
geneList=DEG$logFC
names(geneList)=DEG$ENTREZID
class(geneList)
geneList=sort(geneList,decreasing = T)
## KEGG pathway analysis
if(T){
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05)
head(kk.down)[,1:6]
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk.diff)[,1:6]
kegg_diff_dt <- as.data.frame(kk.diff)
kegg_down_dt <- as.data.frame(kk.down)
kegg_up_dt <- as.data.frame(kk.up)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down.png')
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
down_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore < 0,];down_kegg$group=-1
up_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down_gsea.png')
}
BiocManager::install("KEGGgraph")
## KEGG pathway analysis
if(T){
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05)
head(kk.down)[,1:6]
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk.diff)[,1:6]
kegg_diff_dt <- as.data.frame(kk.diff)
kegg_down_dt <- as.data.frame(kk.down)
kegg_up_dt <- as.data.frame(kk.up)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down.png')
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
down_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore < 0,];down_kegg$group=-1
up_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down_gsea.png')
}
library(KEGGgraph)
## KEGG pathway analysis
if(T){
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05)
head(kk.down)[,1:6]
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk.diff)[,1:6]
kegg_diff_dt <- as.data.frame(kk.diff)
kegg_down_dt <- as.data.frame(kk.down)
kegg_up_dt <- as.data.frame(kk.up)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down.png')
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
down_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore < 0,];down_kegg$group=-1
up_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down_gsea.png')
}
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05)
head(kk.down)[,1:6]
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk.diff)[,1:6]
kegg_diff_dt <- as.data.frame(kk.diff)
kegg_down_dt <- as.data.frame(kk.down)
kegg_up_dt <- as.data.frame(kk.up)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
gseaplot(kk.up,geneSetID = 'hsa04145')
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
gseaplot(kk.up,geneSetID = 'hsa04145')
source("functions.R")
## KEGG pathway analysis
if(T){
###   over-representation test
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05)
head(kk.down)[,1:6]
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk.diff)[,1:6]
kegg_diff_dt <- as.data.frame(kk.diff)
kegg_down_dt <- as.data.frame(kk.down)
kegg_up_dt <- as.data.frame(kk.up)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down.png')
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
down_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore < 0,];down_kegg$group=-1
up_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];up_kegg$group=1
g_kegg=kegg_plot(up_kegg,down_kegg)
print(g_kegg)
ggsave(g_kegg,filename = 'kegg_up_down_gsea.png')
}
g_list=list(gene_up=gene_up,
gene_down=gene_down,
gene_diff=gene_diff)
go_enrich_results <- lapply( g_list , function(gene) {
lapply( c('BP','MF','CC') , function(ont) {
cat(paste('Now process ',ont ))
ego <- enrichGO(gene          = gene,
universe      = gene_all,
OrgDb         = org.Hs.eg.db,
ont           = ont ,
pAdjustMethod = "BH",
pvalueCutoff  = 0.99,
qvalueCutoff  = 0.99,
readable      = TRUE)
print( head(ego) )
return(ego)
})
})
save(go_enrich_results,file = 'go_enrich_results.Rdata')
load(file = 'go_enrich_results.Rdata')
n1= c('gene_up','gene_down','gene_diff')
n2= c('BP','MF','CC')
for (i in 1:3){
for (j in 1:3){
fn=paste0('dotplot_',n1[i],'_',n2[j],'.png')
cat(paste0(fn,'\n'))
png(fn,res=150,width = 1080)
print( dotplot(go_enrich_results[[i]][[j]] ))
dev.off()
}
}
